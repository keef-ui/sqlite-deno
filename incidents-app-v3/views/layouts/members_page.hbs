<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{title}}</title>
    <link rel="stylesheet" href="/css/foundation.css" />
    <link rel="stylesheet" href="/css/app.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.css"
    />
  </head>
  <body>
    {{{body}}}
    <script src="/js/jquery.js"></script>
    <script src="/js/what-input.js"></script>
    <script src="/js/foundation.js"></script>
    <script src="/js/app.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.js"></script>

    <script type="module">
      import { fetchLocationData } from "./scripts/fetch_location.js";

      const map = L.map("modal-map").setView([51.5, -0.09], 16);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution:
          '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      }).addTo(map);

      const marker1 = L.marker([51.5, -0.09]);
      console.log(marker1);
      var marker = L.marker([51.5, -0.09]).addTo(map);
      //Attach map location preview button  data attribute
      document
        .querySelectorAll('.button[data-open="locateonmap"]')
        .forEach((button) => {
          button.addEventListener("click", function () {
            const raw_location = this.getAttribute("data-location");

            const location = JSON.parse(raw_location);

            document
              .querySelector("#locateonmap")
              .setAttribute("data-location", raw_location);
          });
        });
       //On Map Modal open, display map marker and location text
      document.addEventListener("DOMContentLoaded", function () {
        $("#locateonmap").on("open.zf.reveal", function (e) {
          map.invalidateSize();
           document.querySelector(
              "#locateonmap .text"
            ).textContent="";

          const raw_location = this.getAttribute("data-location");
          const location = JSON.parse(raw_location);

          console.log(marker1);
          map.setView([location.lat, location.lng], 16);
          marker1.setLatLng([location.lat, location.lng]).addTo(map);

          const address = async () => {
            const a = await fetchLocationData(location.lat, location.lng);
            console.log(a);
            return a;
          };
          address().then((address) => {
            document.querySelector(
              "#locateonmap .text"
            ).textContent = `${address.street},  ${address.city}, postcode: ${address.postcode}`;
          });
        });
      });
    </script>
    <!-- <script  src="scripts/locationPicker.js"></script> -->
  </body>
</html>
